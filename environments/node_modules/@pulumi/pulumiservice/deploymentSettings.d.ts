import * as pulumi from "@pulumi/pulumi";
import * as inputs from "@pulumi/pulumiservice/types/input";
import * as outputs from "@pulumi/pulumiservice/types/output";
/**
 * Deployment settings configure Pulumi Deployments for a stack.
 *
 * ### Import
 *
 * Deployment settings can be imported using the `id`, which for deployment settings is `{org}/{project}/{stack}` e.g.,
 *
 * ```sh
 *  $ pulumi import pulumiservice:index:DeploymentSettings my_settings my-org/my-project/my-stack
 * ```
 */
export declare class DeploymentSettings extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentSettings;
    /**
     * Returns true if the given object is an instance of DeploymentSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeploymentSettings;
    /**
     * The agent pool identifier to use for the deployment.
     */
    readonly agentPoolId: pulumi.Output<string | undefined>;
    /**
     * Settings related to the deployment executor.
     */
    readonly executorContext: pulumi.Output<outputs.DeploymentSettingsExecutorContext | undefined>;
    /**
     * GitHub settings for the deployment.
     */
    readonly github: pulumi.Output<outputs.DeploymentSettingsGithub | undefined>;
    /**
     * Settings related to the Pulumi operation environment during the deployment.
     */
    readonly operationContext: pulumi.Output<outputs.DeploymentSettingsOperationContext | undefined>;
    /**
     * Organization name.
     */
    readonly organization: pulumi.Output<string>;
    /**
     * Project name.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Settings related to the source of the deployment.
     */
    readonly sourceContext: pulumi.Output<outputs.DeploymentSettingsSourceContext>;
    /**
     * Stack name.
     */
    readonly stack: pulumi.Output<string>;
    /**
     * Create a DeploymentSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentSettingsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DeploymentSettings resource.
 */
export interface DeploymentSettingsArgs {
    /**
     * The agent pool identifier to use for the deployment.
     */
    agentPoolId?: pulumi.Input<string>;
    /**
     * Settings related to the deployment executor.
     */
    executorContext?: pulumi.Input<inputs.DeploymentSettingsExecutorContextArgs>;
    /**
     * GitHub settings for the deployment.
     */
    github?: pulumi.Input<inputs.DeploymentSettingsGithubArgs>;
    /**
     * Settings related to the Pulumi operation environment during the deployment.
     */
    operationContext?: pulumi.Input<inputs.DeploymentSettingsOperationContextArgs>;
    /**
     * Organization name.
     */
    organization: pulumi.Input<string>;
    /**
     * Project name.
     */
    project: pulumi.Input<string>;
    /**
     * Settings related to the source of the deployment.
     */
    sourceContext: pulumi.Input<inputs.DeploymentSettingsSourceContextArgs>;
    /**
     * Stack name.
     */
    stack: pulumi.Input<string>;
}
